buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
// apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${mod_version}"
group = "tictim.${mod_id}"
archivesBaseName = "${mod_name}-1.19.2"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
    main {
        resources { srcDir 'src/generated/resources' }
    }

    datagen {
        java { srcDir "src/datagen/java" }
        resources { srcDir "src/datagen/resources" }

        compileClasspath += configurations.getByName("minecraft")
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }

    gametest {
        java { srcDir "src/test/java" }
        resources { srcDir "src/test/resources" }

        compileClasspath += configurations.getByName("minecraft")
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

minecraft {
    mappings channel: 'parchment', version: '2022.08.21-1.19.2'
    // makeObfSourceJar = false

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            ideaModule "${project.name}.main"

            mods {
                hearthstones {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            ideaModule "${project.name}.main"

            mods {
                hearthstones {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'hearthstones'

            mods {
                hearthstones {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'hearthstones', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                hearthstones {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-43.1.2"

    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:11.2.0.256")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:11.2.0.256")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:11.2.0.256")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "Tictim",
                "Specification-Version"   : "${version}",
                "Implementation-Title"    : "tictim.${mod_id}",
                "Implementation-Vendor"   : "Tictim",
                "Implementation-Version"  : "${version}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')